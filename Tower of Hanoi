#include <iostream>
using namespace std;

// Recursive function to solve Tower of Hanoi
void towerOfHanoi(int n, char source, char auxiliary, char destination) {
    // Base case: If only 1 disk, move it directly from source to destination
    if (n == 1) {
        cout << "Move disk 1 from " << source << " to " << destination << endl;
        return;
    }

    // Step 1: Move n-1 disks from source to auxiliary using destination
    towerOfHanoi(n - 1, source, destination, auxiliary);

    // Step 2: Move the nth disk from source to destination
    cout << "Move disk " << n << " from " << source << " to " << destination << endl;

    // Step 3: Move the n-1 disks from auxiliary to destination using source
    towerOfHanoi(n - 1, auxiliary, source, destination);
}

int main() {
    int n;

    // Taking number of disks as input
    cout << "Enter the number of disks: ";
    cin >> n;

    // Calling the Tower of Hanoi function
    cout << "Steps to solve Tower of Hanoi:" << endl;
    towerOfHanoi(n, 'A', 'B', 'C'); // A = Source, B = Auxiliary, C = Destination

    return 0;
}
