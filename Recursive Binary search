#include <iostream>
#include <algorithm> // For sorting the array
using namespace std;

// Recursive function for binary search
int binarySearch(int arr[], int left, int right, int key) {
    // Base case: If left index exceeds right, element is not found
    if (left > right)
        return -1;

    int mid = left + (right - left) / 2; // Calculate the middle index

    // If the element is found at the mid index
    if (arr[mid] == key)
        return mid;

    // If the key is smaller, search in the left half
    if (key < arr[mid])
        return binarySearch(arr, left, mid - 1, key);

    // If the key is larger, search in the right half
    return binarySearch(arr, mid + 1, right, key);
}

int main() {
    int size, key;

    // Taking array size input from the user
    cout << "Enter the number of elements in the array: ";
    cin >> size;

    int arr[size];

    // Taking array elements input
    cout << "Enter " << size << " elements: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }

    // Sorting the array (Binary search works on sorted arrays)
    sort(arr, arr + size);

    // Displaying sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Taking the key to search for
    cout << "Enter the element to search: ";
    cin >> key;

    // Performing recursive binary search
    int result = binarySearch(arr, 0, size - 1, key);

    // Displaying result
    if (result != -1)
        cout << "Element " << key << " found at index " << result << "." << endl;
    else
        cout << "Element " << key << " not found in the array." << endl;

    return 0;
}
