#include <iostream>
#include <algorithm> // For sorting the array
using namespace std;

// Function to perform non-recursive binary search
int binarySearch(int arr[], int size, int key) {
    int left = 0, right = size - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2; // Calculate the middle index

        // If the element is found at mid
        if (arr[mid] == key)
            return mid;

        // If the key is smaller, search in the left half
        if (key < arr[mid])
            right = mid - 1;
        // If the key is larger, search in the right half
        else
            left = mid + 1;
    }

    return -1; // Element not found
}

int main() {
    int size, key;

    // Taking array size input from the user
    cout << "Enter the number of elements in the array: ";
    cin >> size;

    int arr[size];

    // Taking array elements input
    cout << "Enter " << size << " elements: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }

    // Sorting the array (Binary search requires a sorted array)
    sort(arr, arr + size);

    // Displaying sorted array
    cout << "Sorted array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    // Taking the key to search for
    cout << "Enter the element to search: ";
    cin >> key;

    // Performing non-recursive binary search
    int result = binarySearch(arr, size, key);

    // Displaying result
    if (result != -1)
        cout << "Element " << key << " found at index " << result << "." << endl;
    else
        cout << "Element " << key << " not found in the array." << endl;

    return 0;
}
